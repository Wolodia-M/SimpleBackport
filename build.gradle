// Import of mavens and forge
buildscript {
    repositories {
        // Curseforge maven via CurseMaven
        maven { url = "https://cursemaven.com" }
        // Minecraft forge maven
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
        jcenter()
    }
    // Gradle depends on ForgeGradle
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
// Apply forgegradle plugin
apply plugin: 'net.minecraftforge.gradle'
// Make mod version and mc version
def mod_version = "${source_mod_type}"+"-"+"${source_mod_version}"+"-b"+"${source_mod_build}"
def mcversion = "1.12.2"
version = mod_version
// Init internal variables
group = 'my.wolodiam.simplebackport' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'SimpleBackport'
// Set Java compatibility to 1.8 (JAVA8)
sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
// Minecraft section
minecraft {
    // Set mapping to 20171003
    mappings channel: 'snapshot', version: '20171003-1.12'
    // Configure runClient and runServer
    runs {
        client {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
        server {
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}
// Corectly copy resources for runClient
sourceSets {
    main { output.resourcesDir = output.classesDir }
}
// Set mod dependencies
dependencies {
    // JetBrains annotation
    implementation 'org.jetbrains:annotations:23.0.0'
    // Minecraft forge
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'
}
// Make mod manifest automaticly
jar {
    manifest {
        attributes([
            "Specification-Title": "SimpleBackport",
            "Specification-Vendor": "WolodiaM",
            "Specification-Version": "${mod_version}",
            "Implementation-Title": project.name,
            "Implementation-Version": "${mod_version}",
            "Implementation-Vendor" :"WolodiaM",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
// Procces resources for replacing version of mod and minecraft
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", mod_version
    inputs.property "mcversion", mcversion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':mod_version, 'mcversion':mcversion

        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
}
// Custom tasks
// Clear old sources
task clearGeneratedSources(type: Delete) {
    delete "$buildDir/generated-src"
}
// Generate source code with replaced version
task generateSources(type: Copy) {
    from 'src/main/java'
    into "$buildDir/generated-src"
    filter { line -> line.replaceAll('@VERSION@', mod_version) }
}
// Create deobfuscated jar for developing environment
task createDeobfJar(type: Jar) { // Generate deobfuscated
    from "$buildDir/generated-src"
    from sourceSets.main.resources.srcDirs
    classifier = 'deobf'
}
// Create sources jar
task createSourceJar(type: Jar) { // Generate sources
    from "$buildDir/generated-src"
    from sourceSets.main.resources.srcDirs
    classifier = 'sources'
}
// Tasks settings
// Always make new generated sources
tasks.generateSources.dependsOn('clearGeneratedSources')
// compileJava run with prepared and preparced sources and recources
tasks.compileJava.setSource "$buildDir/generated-src"
// All compilation tasks depends on generateSources
tasks.compileJava.dependsOn('generateSources')
tasks.createSourceJar.dependsOn('generateSources')
tasks.createDeobfJar.dependsOn('generateSources')
// task build depend on createSourceJar and createDeobfJar
// for generating other jars
tasks.build.dependsOn('createSourceJar', 'createDeobfJar')
// Save all jars
artifacts {
    archives createDeobfJar
    archives createSourceJar
    archives jar
}
// Main mod jar is finalized by reobfJar
jar.finalizedBy('reobfJar')